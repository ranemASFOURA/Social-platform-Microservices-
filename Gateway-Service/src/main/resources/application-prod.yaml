server:
  port: 8080

spring:
  application:
    name: gateway-service

  webflux:
    cors:
      add-to-simple-url-handler-mapping: true

  cloud:
    gateway:
      globalcors:
        corsConfigurations:
          "[/**]":
            allowedOrigins:
              - "http://localhost:3000"
            allowedMethods:
              - GET
              - POST
              - PUT
              - DELETE
              - OPTIONS
            allowedHeaders:
              - "*"

      routes:
        - id: user-service
          uri: http://user-service.rm-photo-app.svc.cluster.local:8080
          predicates:
            - Path=/api/users/**

        - id: auth-service
          uri: http://auth-service.rm-photo-app.svc.cluster.local:8086
          predicates:
            - Path=/api/auth/**

        - id: follow-service
          uri: http://follow-service.rm-photo-app.svc.cluster.local:8083
          predicates:
            - Path=/api/follow/**

        - id: post-service
          uri: http://post-service.rm-photo-app.svc.cluster.local:8084
          predicates:
            - Path=/api/posts/**

        - id: feed-service
          uri: http://feed-service.rm-photo-app.svc.cluster.local:8085
          predicates:
            - Path=/api/feed/**

        - id: image-proxy
          uri: http://nginx-cdn-service.databases.svc.cluster.local:8089
          predicates:
            - Path=/api/image-proxy/**
          filters:
            - name: RewritePath
              args:
                regexp: "/api/image-proxy/(?<path>.*)"
                replacement: "/cdn/${path}"
            - name: CircuitBreaker
              args:
                name: imageCircuitBreaker
                fallbackUri: forward:/fallback/images

        - id: image-service
          uri: http://image-service.rm-photo-app.svc.cluster.local:8080
          predicates:
            - Path=/api/images/**

        - id: search-service
          uri: http://search-service.rm-photo-app.svc.cluster.local:8081
          predicates:
            - Path=/api/search/**

        - id: cdn-route
          uri: http://nginx-cdn-service.databases.svc.cluster.local:8089
          predicates:
            - Path=/cdn/**
          filters:
            - name: RewritePath
              args:
                regexp: "/cdn/(?<segment>.*)"
                replacement: "/${segment}"

jwt:
  secret: SecretKey

minio:
  base-url: http://minio-service.databases.svc.cluster.local:9102

frontend:
  base-url: http://localhost:3000

eureka:
  client:
    enabled: false

logging:
  level:
    org.springframework.cloud.gateway: DEBUG
    reactor.netty.http.client: DEBUG
    com.example.Gateway_Service: DEBUG

resilience4j:
  circuitbreaker:
    instances:
      imageCircuitBreaker:
        registerHealthIndicator: true
        eventConsumerBufferSize: 10
        failureRateThreshold: 50
        minimumNumberOfCalls: 5
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 10s
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        slidingWindowType: COUNT_BASED
