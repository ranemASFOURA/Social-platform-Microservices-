# ────── Application Info ──────
spring.application.name=user-service
server.port=8080

# ────── MongoDB (Cluster Internal) ──────
spring.data.mongodb.uri=mongodb://mongo-db.databases.svc.cluster.local:27017/user-db

# ────── Kafka (Cluster Internal) ──────
spring.kafka.bootstrap-servers=kafka-service.databases.svc.cluster.local:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.add.type.headers=false

spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.use.type.headers=false
spring.kafka.consumer.properties.spring.json.value.default.type=com.example.user_backend.dto.InfluencerStatusChangedEvent
spring.kafka.consumer.properties.spring.json.trusted.packages=*


# ────── MinIO (Cluster Internal) ──────
minio.url=http://minio-service.databases.svc.cluster.local:9102
minio.accessKey=admin
minio.secretKey=admin123
minio.bucket=user-images

# ────── Service Discovery Disabled ──────
eureka.client.enabled=false
spring.cloud.discovery.enabled=false

# ────── Logging ──────
logging.level.root=INFO
logging.level.org.springframework.web=DEBUG
