# ========== General ==========
spring.application.name=search-backend
server.port=8081

# ========== ElasticSearch (K8s DNS) ==========
spring.elasticsearch.uris=http://elasticsearch.databases.svc.cluster.local:9200
spring.data.elasticsearch.repositories.enabled=true

# ========== Kafka (K8s DNS) ==========
spring.kafka.bootstrap-servers=kafka-service.databases.svc.cluster.local:9092
spring.kafka.consumer.group-id=search-service-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.properties.spring.json.value.default.type=com.example.search_backend.model.UserDocument
spring.kafka.consumer.properties.spring.json.trusted.packages=*

# ========== Inter-service URLs (K8s DNS) ==========
user.service.sample.url=http://user-service.rm-photo-app.svc.cluster.local:8080/api/users/sample?limit=10
follow.service.following.ids.url=http://follow-service.rm-photo-app.svc.cluster.local:8083/api/follow/following-ids

# ────── Monitoring ──────
 # Enable actuator endpoints
management.endpoints.web.exposure.include=health,info,prometheus
management.endpoint.prometheus.enabled=true
management.metrics.export.prometheus.enabled=true

# ────── Tracing and Zipkin ──────
management.tracing.sampling.probability=1.0
management.zipkin.tracing.endpoint=http://zipkin.zipkin.svc.cluster.local:9411/api/v2/spans
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]