# ========== App Info ==========
spring.application.name=follow-backend
server.port=8083

# ========== MongoDB ==========
spring.data.mongodb.host=mongo-follow.databases.svc.cluster.local
spring.data.mongodb.port=27017
spring.data.mongodb.database=follow_service_db

# ========== Kafka ==========
spring.kafka.bootstrap-servers=kafka-service.databases.svc.cluster.local:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.properties.spring.json.use.type.headers=false

# ========== External URLs ==========
user.service.type.endpoint=http://user-service.rm-photo-app.svc.cluster.local:8080/api/users/{id}/type

# ────── Monitoring ──────
# Enable actuator endpoints
management.endpoints.web.exposure.include=health,info,prometheus
management.endpoint.prometheus.enabled=true
management.metrics.export.prometheus.enabled=true

# Set actuator to same port as app
management.server.port=8083

# ────── Tracing and Zipkin ──────
management.tracing.sampling.probability=1.0
management.zipkin.tracing.endpoint=http://zipkin.zipkin.svc.cluster.local:9411/api/v2/spans
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]